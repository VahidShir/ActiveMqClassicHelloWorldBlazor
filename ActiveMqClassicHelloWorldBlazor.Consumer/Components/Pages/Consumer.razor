@page "/"
@using Apache.NMS
@using Apache.NMS.ActiveMQ
@rendermode InteractiveServer
@implements IDisposable

<h3>ActiveMQ</h3>

<h3>Received Messages:</h3>

<ul>
    @foreach (var message in messages)
    {
        <li>@message</li>
    }
</ul>

@code {
    private IConnection connection;
    private ISession session;
    private IMessageConsumer consumer;
    private List<string> messages = new();

    private void Init()
    {
        Uri connecturi = new Uri("activemq:tcp://localhost:61616");
        ConnectionFactory connectionFactory = new ConnectionFactory(connecturi);

        // Create a Connection
        this.connection = connectionFactory.CreateConnection();
        this.connection.Start();

        // Create a Session
        session = connection.CreateSession(AcknowledgementMode.AutoAcknowledge);

        // Get the destination (Topic or Queue)
        IDestination destination = session.GetQueue("my_queue");

        // Create a MessageProducer from the Session to the Topic or Queue
        consumer = session.CreateConsumer(destination);
        consumer.Listener += Consumer_Listener;
    }

    protected override async Task OnInitializedAsync()
    {
        Init();
    }

    private async void Consumer_Listener(IMessage message)
    {
        var txtMessage = message as ITextMessage;
        messages.Add(txtMessage.Text);

        await InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        // Clean up
        if (consumer != null)
        {
            consumer.Listener -= Consumer_Listener;
            consumer?.Close();
        }

        session?.Close();
        connection?.Close();
    }
}